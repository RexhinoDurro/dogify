# Generated by Django 5.2 on 2025-09-01 15:12

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BehavioralPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('session_id', models.CharField(max_length=64)),
                ('mouse_movements', models.IntegerField(default=0)),
                ('mouse_entropy', models.FloatField(default=0.0)),
                ('click_count', models.IntegerField(default=0)),
                ('avg_click_interval', models.FloatField(default=0.0)),
                ('click_timing_variance', models.FloatField(default=0.0)),
                ('scroll_events', models.IntegerField(default=0)),
                ('scroll_patterns', models.TextField(blank=True, default='[]')),
                ('keyboard_events', models.IntegerField(default=0)),
                ('keyboard_rhythm', models.TextField(blank=True, default='[]')),
                ('focus_events', models.IntegerField(default=0)),
                ('page_visibility_changes', models.IntegerField(default=0)),
                ('time_on_page', models.FloatField(default=0.0)),
                ('session_duration', models.FloatField(default=0.0)),
                ('webgl_support', models.BooleanField(default=False)),
                ('canvas_fingerprint', models.TextField(blank=True)),
                ('audio_fingerprint', models.TextField(blank=True)),
                ('font_count', models.IntegerField(default=0)),
                ('plugin_count', models.IntegerField(default=0)),
                ('screen_resolution', models.CharField(blank=True, max_length=20)),
                ('timezone_offset', models.IntegerField(default=0)),
                ('language_count', models.IntegerField(default=1)),
                ('hardware_concurrency', models.IntegerField(default=1)),
                ('device_memory', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'behavioral_patterns',
                'indexes': [models.Index(fields=['ip_address', 'created_at'], name='behavioral__ip_addr_59c27f_idx'), models.Index(fields=['session_id'], name='behavioral__session_88ae3e_idx')],
            },
        ),
        migrations.CreateModel(
            name='BotDetection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('user_agent', models.TextField()),
                ('fingerprint', models.CharField(max_length=64)),
                ('is_bot', models.BooleanField(default=False)),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('detection_methods', models.TextField(blank=True, default='[]')),
                ('url_path', models.CharField(max_length=500)),
                ('http_method', models.CharField(max_length=10)),
                ('referrer', models.URLField(blank=True)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('behavioral_data', models.TextField(blank=True, default='{}')),
                ('headers', models.TextField(blank=True, default='{}')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('clean', 'Clean'), ('suspicious', 'Suspicious'), ('bot', 'Bot Detected'), ('blocked', 'Blocked')], default='clean', max_length=20)),
            ],
            options={
                'db_table': 'bot_detections',
                'indexes': [models.Index(fields=['ip_address', 'timestamp'], name='bot_detecti_ip_addr_c44b1a_idx'), models.Index(fields=['is_bot', 'timestamp'], name='bot_detecti_is_bot_2cbd4b_idx'), models.Index(fields=['confidence_score'], name='bot_detecti_confide_a41427_idx'), models.Index(fields=['status'], name='bot_detecti_status_845ce0_idx')],
            },
        ),
        migrations.CreateModel(
            name='IPBlacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(db_index=True, unique=True)),
                ('reason', models.CharField(max_length=255)),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('detection_method', models.CharField(max_length=100)),
                ('user_agent', models.TextField(blank=True)),
                ('fingerprint', models.CharField(blank=True, max_length=64)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('detection_count', models.PositiveIntegerField(default=1)),
                ('last_seen', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ip_blacklist',
                'indexes': [models.Index(fields=['ip_address', 'is_active'], name='ip_blacklis_ip_addr_3b9916_idx'), models.Index(fields=['created_at'], name='ip_blacklis_created_5ec8c5_idx'), models.Index(fields=['confidence_score'], name='ip_blacklis_confide_c9859b_idx')],
            },
        ),
        migrations.CreateModel(
            name='RequestPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('endpoint', models.CharField(max_length=500)),
                ('method', models.CharField(max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('response_code', models.IntegerField()),
                ('response_time', models.FloatField()),
                ('user_agent_hash', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'request_patterns',
                'indexes': [models.Index(fields=['ip_address', 'timestamp'], name='request_pat_ip_addr_016c34_idx'), models.Index(fields=['endpoint'], name='request_pat_endpoin_2f9d9e_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('bot_detected', 'Bot Detected'), ('ip_blocked', 'IP Blocked'), ('suspicious_activity', 'Suspicious Activity'), ('rate_limit_exceeded', 'Rate Limit Exceeded'), ('honeypot_triggered', 'Honeypot Triggered'), ('model_retrained', 'ML Model Retrained'), ('ip_unblocked', 'IP Unblocked')], max_length=30)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('description', models.TextField()),
                ('details', models.TextField(blank=True, default='{}')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'security_logs',
                'indexes': [models.Index(fields=['event_type', 'timestamp'], name='security_lo_event_t_9e8783_idx'), models.Index(fields=['severity', 'timestamp'], name='security_lo_severit_4109e4_idx'), models.Index(fields=['ip_address', 'timestamp'], name='security_lo_ip_addr_0efe7c_idx')],
            },
        ),
        migrations.CreateModel(
            name='ThreatIntelligence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('threat_type', models.CharField(choices=[('malicious_ip', 'Malicious IP'), ('bot_network', 'Bot Network'), ('proxy', 'Proxy/VPN'), ('datacenter', 'Datacenter IP')], max_length=20)),
                ('confidence', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('source', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('first_seen', models.DateTimeField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'threat_intelligence',
                'indexes': [models.Index(fields=['ip_address', 'is_active'], name='threat_inte_ip_addr_988365_idx'), models.Index(fields=['threat_type'], name='threat_inte_threat__fab55c_idx')],
                'unique_together': {('ip_address', 'threat_type')},
            },
        ),
    ]
